{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"A Replication of Karlan and List (2007)\"\n",
        "author: \"Jenny Shyu\"\n",
        "date: today\n",
        "callout-appearance: minimal # this hides the blue \"i\" icon on .callout-notes\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Introduction\n",
        "\n",
        "Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the _American Economic Review_ in 2007. The article and supporting data are available from the [AEA website](https://www.aeaweb.org/articles?id=10.1257/aer.97.5.1774) and from Innovations for Poverty Action as part of [Harvard's Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/27853&version=4.2).\n",
        "\n",
        "This project seeks to replicate their results. The goal of the experiment was to test whether offering a matching donation—in which a lead donor promises to match contributions from other individuals—would increase the likelihood and/or size of charitable donations. In addition to testing whether matching grants were effective in general, Karlan and List also explored whether the size of the match mattered. Some participants were told that every dollar they donated would be matched 1:1, while others were offered more generous matches (2:1 or 3:1), allowing the researchers to test for differences in donor behavior across match sizes.\n",
        "\n",
        "The experiment is notable for its scale, randomization, and use of real-world donor behavior, which together provide credible evidence of causal effects. Because the fundraising letters were identical in every respect except for the treatment condition, any differences in outcomes across groups can be attributed to the match offer itself. This approach allows for insights not only into how people respond to incentives, but also into broader questions about social influence, perceived impact, and behavioral nudges in charitable giving.\n",
        "\n",
        "\n",
        "## Data\n",
        "\n",
        "### Description\n"
      ],
      "id": "d1252229"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = pd.read_stata(\"karlan_list_2007.dta\")\n",
        "data.head()"
      ],
      "id": "387e604e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "data.describe()"
      ],
      "id": "b6750796",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::: {.callout-note collapse=\"true\"}\n",
        "### Variable Definitions\n",
        "\n",
        "| Variable             | Description                                                         |\n",
        "|----------------------|---------------------------------------------------------------------|\n",
        "| `treatment`          | Treatment                                                           |\n",
        "| `control`            | Control                                                             |\n",
        "| `ratio`              | Match ratio                                                         |\n",
        "| `ratio2`             | 2:1 match ratio                                                     |\n",
        "| `ratio3`             | 3:1 match ratio                                                     |\n",
        "| `size`               | Match threshold                                                     |\n",
        "| `size25`             | \\$25,000 match threshold                                            |\n",
        "| `size50`             | \\$50,000 match threshold                                            |\n",
        "| `size100`            | \\$100,000 match threshold                                           |\n",
        "| `sizeno`             | Unstated match threshold                                            |\n",
        "| `ask`                | Suggested donation amount                                           |\n",
        "| `askd1`              | Suggested donation was highest previous contribution                |\n",
        "| `askd2`              | Suggested donation was 1.25 x highest previous contribution         |\n",
        "| `askd3`              | Suggested donation was 1.50 x highest previous contribution         |\n",
        "| `ask1`               | Highest previous contribution (for suggestion)                      |\n",
        "| `ask2`               | 1.25 x highest previous contribution (for suggestion)               |\n",
        "| `ask3`               | 1.50 x highest previous contribution (for suggestion)               |\n",
        "| `amount`             | Dollars given                                                       |\n",
        "| `gave`               | Gave anything                                                       |\n",
        "| `amountchange`       | Change in amount given                                              |\n",
        "| `hpa`                | Highest previous contribution                                       |\n",
        "| `ltmedmra`           | Small prior donor: last gift was less than median \\$35              |\n",
        "| `freq`               | Number of prior donations                                           |\n",
        "| `years`              | Number of years since initial donation                              |\n",
        "| `year5`              | At least 5 years since initial donation                             |\n",
        "| `mrm2`               | Number of months since last donation                                |\n",
        "| `dormant`            | Already donated in 2005                                             |\n",
        "| `female`             | Female                                                              |\n",
        "| `couple`             | Couple                                                              |\n",
        "| `state50one`         | State tag: 1 for one observation of each of 50 states; 0 otherwise  |\n",
        "| `nonlit`             | Nonlitigation                                                       |\n",
        "| `cases`              | Court cases from state in 2004-5 in which organization was involved |\n",
        "| `statecnt`           | Percent of sample from state                                        |\n",
        "| `stateresponse`      | Proportion of sample from the state who gave                        |\n",
        "| `stateresponset`     | Proportion of treated sample from the state who gave                |\n",
        "| `stateresponsec`     | Proportion of control sample from the state who gave                |\n",
        "| `stateresponsetminc` | stateresponset - stateresponsec                                     |\n",
        "| `perbush`            | State vote share for Bush                                           |\n",
        "| `close25`            | State vote share for Bush between 47.5% and 52.5%                   |\n",
        "| `red0`               | Red state                                                           |\n",
        "| `blue0`              | Blue state                                                          |\n",
        "| `redcty`             | Red county                                                          |\n",
        "| `bluecty`            | Blue county                                                         |\n",
        "| `pwhite`             | Proportion white within zip code                                    |\n",
        "| `pblack`             | Proportion black within zip code                                    |\n",
        "| `page18_39`          | Proportion age 18-39 within zip code                                |\n",
        "| `ave_hh_sz`          | Average household size within zip code                              |\n",
        "| `median_hhincome`    | Median household income within zip code                             |\n",
        "| `powner`             | Proportion house owner within zip code                              |\n",
        "| `psch_atlstba`       | Proportion who finished college within zip code                     |\n",
        "| `pop_propurban`      | Proportion of population urban within zip code                      |\n",
        "\n",
        "::::\n",
        "\n",
        "\n",
        "### Balance Test \n",
        "\n",
        "As an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.\n",
        "\n",
        "_todo: test a few variables other than the key outcome variables (for example, test months since last donation) to see if the treatment and control groups are statistically significantly different at the 95% confidence level. Do each as a t-test and separately as a linear regression, and confirm you get the exact same results from both methods. When doing a t-test, use the formula in the class slides. When doing the linear regression, regress for example mrm2 on treatment and look at the estimated coefficient on the treatment variable. It might be helpful to compare parts of your analysis to Table 1 in the paper. Be sure to comment on your results (hint: why is Table 1 included in the paper)._\n",
        "\n",
        "As an ad hoc test of the randomization mechanism, I compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another at the 95% confidence level. If randomization was properly executed, we should expect no statistically significant differences in pre-treatment characteristics between the groups.\n",
        "\n",
        "I begin by testing the variable mrm2, which captures the number of months since the last donation. This variable is useful for checking balance because it is unrelated to the treatment assignment and reflects donor history.\n"
      ],
      "id": "9d76b198"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import statsmodels.formula.api as smf\n",
        "from scipy import stats\n",
        "\n",
        "\n",
        "data = pd.read_stata(\"karlan_list_2007.dta\")\n",
        "\n",
        "vars_to_test = [\"mrm2\", \"amount\", \"years\", \"freq\"]\n",
        "results = []\n",
        "\n",
        "for var in vars_to_test:\n",
        "    subset = data[[\"treatment\", var]].dropna()\n",
        "    control = subset[subset[\"treatment\"] == 0][var]\n",
        "    treatment = subset[subset[\"treatment\"] == 1][var]\n",
        "    \n",
        "    # T-test\n",
        "    t_stat, p_val = stats.ttest_ind(treatment, control, equal_var=False)\n",
        "    \n",
        "    # Linear regression\n",
        "    regression = smf.ols(f\"{var} ~ treatment\", data=subset).fit()\n",
        "    coef = regression.params[\"treatment\"]\n",
        "    reg_p = regression.pvalues[\"treatment\"]\n",
        "    \n",
        "    # Difference in means\n",
        "    diff = treatment.mean() - control.mean()\n",
        "    \n",
        "    results.append({\n",
        "        \"Variable\": var,\n",
        "        \"Diff (Treat - Control)\": round(diff, 5),\n",
        "        \"T-test p-value\": round(p_val, 5),\n",
        "        \"Regression Coef\": round(coef, 5),\n",
        "        \"Regression p-value\": round(reg_p, 5)\n",
        "    })\n",
        "\n",
        "pd.DataFrame(results)\n"
      ],
      "id": "af3c264f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The table of results above shows no statistically significant differences at the 5% level for any variable (p-values > 0.05), though amount is marginally close (p ≈ 0.06 in the regression). This is consistent with proper random assignment.\n",
        "\n",
        "These checks are similar to what Karlan and List report in Table 1 of the original paper, which reassures readers that the treatment effect estimates later in the paper can be interpreted as causal. If pre-treatment covariates are balanced, then observed differences in outcomes are more likely attributable to the randomized treatment itself.\n",
        "\n",
        "#### Interpretation\n",
        "These results mirror those presented in Table 1 of Karlan and List (2007), which shows no significant differences between the groups in prior donation behavior and demographic characteristics. Table 1 serves to reassure the reader that any observed treatment effects later in the analysis can be confidently attributed to the randomized intervention rather than pre-existing differences between groups.\n",
        "\n",
        "## Experimental Results\n",
        "\n",
        "### Charitable Contribution Made\n",
        "\n",
        "First, I analyze whether matched donations lead to an increased response rate of making a donation. \n",
        "\n",
        "_todo: make a barplot with two bars. Each bar is the proportion of people who donated. One bar for treatment and one bar for control._\n",
        "\n",
        "_todo: run a t-test between the treatment and control groups on the binary outcome of whether any charitable donation was made. Also run a bivariate linear regression that demonstrates the same finding. (It may help to confirm your calculations match Table 2a Panel A.) Report your statistical results and interpret them in the context of the experiment (e.g., if you found a difference with a small p-value or that was statistically significant at some threshold, what have you learned about human behavior? Use mostly English words, not numbers or stats, to explain your finding.)_\n",
        "\n",
        "_todo: run a probit regression where the outcome variable is whether any charitable donation was made and the explanatory variable is assignment to treatment or control. Confirm that your results replicate Table 3 column 1 in the paper._\n",
        "\n",
        "#### Donation Rate by Group\n"
      ],
      "id": "a74c1166"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Calculate donation rates\n",
        "donation_rates = data.groupby(\"treatment\")[\"gave\"].mean().reset_index()\n",
        "donation_rates[\"group\"] = donation_rates[\"treatment\"].map({0: \"Control\", 1: \"Treatment\"})\n",
        "\n",
        "# Create barplot\n",
        "plt.figure(figsize=(6, 4))\n",
        "ax = sns.barplot(data=donation_rates, x=\"group\", y=\"gave\")\n",
        "plt.ylabel(\"Proportion Donated\")\n",
        "plt.xlabel(\"\")\n",
        "plt.title(\"Donation Rate by Group\")\n",
        "plt.ylim(0, 0.03)\n",
        "plt.grid(axis='y')\n",
        "\n",
        "# Add percentage labels on top\n",
        "for i, val in enumerate(donation_rates[\"gave\"]):\n",
        "    ax.text(i, val + 0.0005, f\"{val:.3%}\", ha='center', va='bottom')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "ee2b8ebc",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This bar plot shows that the treatment group—who received matching grant letters—had a higher donation rate than the control group.\n",
        "\n",
        "#### T-Test and Linear Regression\n"
      ],
      "id": "d7b28b6e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "treat_gave = data[data['treatment'] == 1]['gave']\n",
        "control_gave = data[data['treatment'] == 0]['gave']\n",
        "t_stat, t_pval = stats.ttest_ind(treat_gave, control_gave, equal_var=False)\n",
        "\n",
        "# Format output\n",
        "pd.DataFrame([{\n",
        "    \"T-test Statistic\": round(t_stat, 3),\n",
        "    \"T-test p-value\": round(t_pval, 5)\n",
        "}])"
      ],
      "id": "c50125db",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "gave_regression = smf.ols(\"gave ~ treatment\", data=data).fit()\n",
        "coef = gave_regression.params[\"treatment\"]\n",
        "std_err = gave_regression.bse[\"treatment\"]\n",
        "p_val = gave_regression.pvalues[\"treatment\"]\n",
        "conf_int = gave_regression.conf_int().loc[\"treatment\"]\n",
        "\n",
        "# Format output\n",
        "pd.DataFrame([{\n",
        "    \"Treatment Coefficient\": round(coef, 5),\n",
        "    \"Standard Error\": round(std_err, 5),\n",
        "    \"p-value\": round(p_val, 5),\n",
        "    \"95% CI Lower\": round(conf_int[0], 5),\n",
        "    \"95% CI Upper\": round(conf_int[1], 5)\n",
        "}])"
      ],
      "id": "0f8bb46e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The difference in donation rates is statistically significant at the 1% level.\n",
        "\n",
        "The treatment group is more likely to donate, increasing the probability of giving by about 0.42 percentage points.\n",
        "\n",
        "This replicates the result from Table 2A Panel A in Karlan & List (2007), showing that a match offer significantly boosts participation.\n",
        "\n",
        "OLS regression shows a statistically significant positive coefficient (≈ 0.0042) on the treatment variable. This confirms the t-test: assignment to the treatment group increased the likelihood of making a donation.\n",
        "\n",
        "This suggests that even a small behavioral nudge like mentioning a matching donation makes people more likely to contribute to charity. People respond to the perception of increased impact.\n"
      ],
      "id": "c810e103"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Probit model\n",
        "import statsmodels.api as sm\n",
        "\n",
        "probit_model = smf.probit(\"gave ~ treatment\", data=data).fit()\n",
        "coef = probit_model.params[\"treatment\"]\n",
        "std_err = probit_model.bse[\"treatment\"]\n",
        "p_val = probit_model.pvalues[\"treatment\"]\n",
        "conf_int = probit_model.conf_int().loc[\"treatment\"]\n",
        "\n",
        "# Output summary\n",
        "pd.DataFrame([{\n",
        "    \"Probit Coefficient\": round(coef, 5),\n",
        "    \"Standard Error\": round(std_err, 5),\n",
        "    \"p-value\": round(p_val, 5),\n",
        "    \"95% CI Lower\": round(conf_int[0], 5),\n",
        "    \"95% CI Upper\": round(conf_int[1], 5)\n",
        "}])"
      ],
      "id": "8272dd06",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The probit model replicates Table 3, Column 1 of Karlan and List (2007), with a significant positive treatment effect (coefficient ≈ 0.087, p ≈ 0.002). This again confirms that individuals are more likely to donate when offered a matching grant.\n",
        "\n",
        "Together, these results demonstrate a consistent and statistically significant treatment effect, providing strong evidence that the framing of charitable solicitations matters for donor behavior.\n",
        "\n",
        "The match incentive not only has a practical impact but also a statistically robust one, even under a probit framework.\n",
        "\n",
        "### Differences between Match Rates\n",
        "\n",
        "Next, I assess the effectiveness of different sizes of matched donations on the response rate.\n",
        "\n",
        "_todo: Use a series of t-tests to test whether the size of the match ratio has an effect on whether people donate or not. For example, does the 2:1 match rate lead increase the likelihood that someone donates as compared to the 1:1 match rate? Do your results support the \"figures suggest\" comment the authors make on page 8?_\n",
        "\n",
        "_todo: Assess the same issue using a regression. Specifically, create the variable `ratio1` then regress `gave` on `ratio1`, `ratio2`, and `ratio3` (or alternatively, regress `gave` on the categorical variable `ratio`). Interpret the coefficients and their statistical precision._\n",
        "\n",
        "_todo: Calculate the response rate difference between the 1:1 and 2:1 match ratios and the 2:1 and 3:1 ratios.  Do this directly from the data, and do it by computing the differences in the fitted coefficients of the previous regression. what do you conclude regarding the effectiveness of different sizes of matched donations?_\n",
        "\n",
        "also include p-velue 2:1 vs 1:1, 3:1 vs 2:1, 3:1 vs 1:1\n",
        "\n",
        "for ols regresssion only have intercept, ration2, ratio3\n",
        "\n",
        "raw difference (2:1-1:1)\n",
        "raw difference (3:1 - 2:1)\n",
        "fitted difference (2:1 - 1:1)\n",
        "fitted difference (3:1 - 2:1)\n",
        "\n",
        "\n",
        "#### Response Rates by Match Ratio\n"
      ],
      "id": "d4c1a021"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "matched_data = data[(data[\"treatment\"] == 1) & (data[\"ratio\"].isin([1, 2, 3]))]\n",
        "\n",
        "# Calculate means\n",
        "response_rates = matched_data.groupby(\"ratio\")[\"gave\"].mean()\n",
        "\n",
        "# Separate groups for pairwise comparisons\n",
        "gave_1 = matched_data[matched_data[\"ratio\"] == 1][\"gave\"]\n",
        "gave_2 = matched_data[matched_data[\"ratio\"] == 2][\"gave\"]\n",
        "gave_3 = matched_data[matched_data[\"ratio\"] == 3][\"gave\"]\n",
        "\n",
        "# T-tests for pairwise comparisons\n",
        "from scipy import stats\n",
        "\n",
        "summary = pd.DataFrame({\n",
        "    \"Comparison\": [\"2:1 vs 1:1\", \"3:1 vs 2:1\", \"3:1 vs 1:1\"],\n",
        "    \"p-value\": [\n",
        "        round(stats.ttest_ind(gave_2, gave_1, equal_var=False).pvalue, 5),\n",
        "        round(stats.ttest_ind(gave_3, gave_2, equal_var=False).pvalue, 5),\n",
        "        round(stats.ttest_ind(gave_3, gave_1, equal_var=False).pvalue, 5)\n",
        "    ],\n",
        "    \"Rate A\": [round(gave_2.mean(), 5), round(gave_3.mean(), 5), round(gave_3.mean(), 5)],\n",
        "    \"Rate B\": [round(gave_1.mean(), 5), round(gave_2.mean(), 5), round(gave_1.mean(), 5)],\n",
        "    \"Difference (A - B)\": [\n",
        "        round(gave_2.mean() - gave_1.mean(), 5),\n",
        "        round(gave_3.mean() - gave_2.mean(), 5),\n",
        "        round(gave_3.mean() - gave_1.mean(), 5)\n",
        "    ]\n",
        "})\n",
        "\n",
        "summary\n"
      ],
      "id": "48c71721",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Observed donation rates:\n",
        "\n",
        "1:1 match — 2.07%\n",
        "\n",
        "2:1 match — 2.26%\n",
        "\n",
        "3:1 match — 2.27%\n",
        "\n",
        "The increase from 1:1 to 2:1 and 3:1 appears small.\n",
        "\n",
        "None of the pairwise comparisons are statistically significant. This supports the paper’s statement on page 8 that larger match ratios do not lead to meaningfully higher donation rates.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "#### Regression: Match Ratio Effects\n"
      ],
      "id": "449f0b9d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Regression with dummy variables (baseline: 1:1 match)\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "matched_data[\"ratio2\"] = (matched_data[\"ratio\"] == 2).astype(int)\n",
        "matched_data[\"ratio3\"] = (matched_data[\"ratio\"] == 3).astype(int)\n",
        "\n",
        "reg_model = smf.ols(\"gave ~ ratio2 + ratio3\", data=matched_data).fit()\n",
        "\n",
        "# Clean formatted output\n",
        "coefs = reg_model.params\n",
        "stderr = reg_model.bse\n",
        "pvals = reg_model.pvalues\n",
        "confint = reg_model.conf_int()\n",
        "\n",
        "pd.DataFrame({\n",
        "    \"Coefficient\": coefs.round(5),\n",
        "    \"Std. Error\": stderr.round(5),\n",
        "    \"p-value\": pvals.round(5),\n",
        "    \"95% CI Lower\": confint[0].round(5),\n",
        "    \"95% CI Upper\": confint[1].round(5)\n",
        "}).loc[[\"Intercept\", \"ratio2\", \"ratio3\"]].reset_index().rename(columns={\"index\": \"Term\"})\n"
      ],
      "id": "32e7257a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Regression results:\n",
        "\n",
        "The baseline (1:1 match) donation rate is about 2.07%.\n",
        "\n",
        "The 2:1 match effect: +0.19 percentage points (not statistically significant).\n",
        "\n",
        "The 3:1 match effect: +0.20 percentage points (also not statistically significant).\n",
        "\n",
        "Neither the 2:1 nor 3:1 match ratio coefficients are statistically significant. The results suggest that changing the size of the match ratio does not significantly change donation likelihood relative to 1:1.\n",
        "\n",
        "\n",
        "#### Difference in Response Rates (Data vs. Regression Coefficients)\n"
      ],
      "id": "49833dd3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Mean differences and coefficient comparisons\n",
        "pd.DataFrame([\n",
        "    {\n",
        "        \"Comparison\": \"2:1 vs 1:1\",\n",
        "        \"Raw Mean Difference\": round(gave_2.mean() - gave_1.mean(), 5),\n",
        "        \"Regression Coefficient\": round(reg_model.params[\"ratio2\"], 5)\n",
        "    },\n",
        "    {\n",
        "        \"Comparison\": \"3:1 vs 2:1\",\n",
        "        \"Raw Mean Difference\": round(gave_3.mean() - gave_2.mean(), 5),\n",
        "        \"Regression Coefficient Diff (3 - 2)\": round(reg_model.params[\"ratio3\"] - reg_model.params[\"ratio2\"], 5)\n",
        "    },\n",
        "    {\n",
        "        \"Comparison\": \"3:1 vs 1:1\",\n",
        "        \"Raw Mean Difference\": round(gave_3.mean() - gave_1.mean(), 5),\n",
        "        \"Regression Coefficient\": round(reg_model.params[\"ratio3\"], 5)\n",
        "    }\n",
        "])\n"
      ],
      "id": "9555d521",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The differences in donation rates between 1:1, 2:1, and 3:1 match offers are very small and not statistically significant. These findings replicate the comment on page 8 of Karlan and List (2007): \"Larger match ratios relative to a smaller match ratio had no additional impact.\"\n",
        "\n",
        "This suggests that donors may respond to the presence of a match, but not necessarily to the size of the match. Psychologically, the idea of having one's donation matched could serve as a signal of trust or endorsement—but the exact multiplier does not further influence behavior.\n",
        "\n",
        "### Size of Charitable Contribution\n",
        "\n",
        "In this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\n",
        "\n",
        "_todo: Calculate a t-test or run a bivariate linear regression of the donation amount on the treatment status. What do we learn from doing this analysis?_\n",
        "\n",
        "_todo: now limit the data to just people who made a donation and repeat the previous analysis. This regression allows you to analyze how much respondents donate conditional on donating some positive amount. Interpret the regression coefficients -- what did we learn? Does the treatment coefficient have a causal interpretation?_ \n",
        "\n",
        "_todo: Make two plot: one for the treatment group and one for the control. Each plot should be a histogram of the donation amounts only among people who donated. Add a red vertical bar or some other annotation to indicate the sample average for each plot._\n",
        "\n",
        "charts side by side and scale\n",
        "#### All Respondents: Does Treatment Affect Amount Donated?\n"
      ],
      "id": "f9e61046"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "amount_reg_all = smf.ols(\"amount ~ treatment\", data=data).fit()\n",
        "\n",
        "pd.DataFrame([{\n",
        "    \"Treatment Coefficient\": round(amount_reg_all.params[\"treatment\"], 5),\n",
        "    \"Std. Error\": round(amount_reg_all.bse[\"treatment\"], 5),\n",
        "    \"t-statistic\": round(amount_reg_all.tvalues[\"treatment\"], 3),\n",
        "    \"p-value\": round(amount_reg_all.pvalues[\"treatment\"], 5),\n",
        "    \"95% CI Lower\": round(amount_reg_all.conf_int().loc[\"treatment\", 0], 5),\n",
        "    \"95% CI Upper\": round(amount_reg_all.conf_int().loc[\"treatment\", 1], 5)\n",
        "}])\n"
      ],
      "id": "680f4c9d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Coefficient on treatment ≈ 0.15\n",
        "\n",
        "p-value ≈ 0.063\n",
        "\n",
        "Among all individuals (including non-donors), the treatment group donated about $0.15 more on average. This effect is marginally significant (p ≈ 0.063). It suggests that matching increases expected donations slightly, but much of that effect may be driven by more people giving (rather than giving more).\n",
        "\n",
        "This suggests that those who received a matching letter donated slightly more on average. However, the result is only marginally significant (at the 10% level). This weak evidence may indicate that the offer of a match has a small impact on the total amount donated—though for most people, the presence of the match does not substantially alter donation size.\n",
        "\n",
        "#### Conditional on Donation: Do Donors Give More if Matched?\n"
      ],
      "id": "62359a93"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Subset to donors only\n",
        "donors = data[data[\"gave\"] == 1]\n",
        "\n",
        "# Linear regression among donors only\n",
        "amount_reg_donors = smf.ols(\"amount ~ treatment\", data=donors).fit()\n",
        "\n",
        "pd.DataFrame([{\n",
        "    \"Treatment Coefficient\": round(amount_reg_donors.params[\"treatment\"], 5),\n",
        "    \"Std. Error\": round(amount_reg_donors.bse[\"treatment\"], 5),\n",
        "    \"t-statistic\": round(amount_reg_donors.tvalues[\"treatment\"], 3),\n",
        "    \"p-value\": round(amount_reg_donors.pvalues[\"treatment\"], 5),\n",
        "    \"95% CI Lower\": round(amount_reg_donors.conf_int().loc[\"treatment\", 0], 5),\n",
        "    \"95% CI Upper\": round(amount_reg_donors.conf_int().loc[\"treatment\", 1], 5)\n",
        "}])\n"
      ],
      "id": "dcd3291c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Coefficient on treatment ≈ -1.67\n",
        "\n",
        "p-value = 0.561\n",
        "\n",
        "Among those who did donate, receiving a match letter did not significantly change the amount given. In fact, the coefficient is slightly negative, though not significant. Thus, we conclude that while match offers may increase the number of donors, they do not cause donors to give more, conditional on giving.\n",
        "\n",
        "This coefficient does not have a strong causal interpretation, because donation decisions and donation amounts are jointly determined and the sample is selected on gave == 1.\n",
        "\n",
        "#### Distribution of Donations Among Donors\n"
      ],
      "id": "f15d69d8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "treatment_donors = data[(data[\"treatment\"] == 1) & (data[\"gave\"] == 1)]\n",
        "control_donors = data[(data[\"treatment\"] == 0) & (data[\"gave\"] == 1)]\n",
        "\n",
        "mean_treat = treatment_donors[\"amount\"].mean()\n",
        "mean_control = control_donors[\"amount\"].mean()\n",
        "\n",
        "fig, axes = plt.subplots(1, 2, figsize=(14, 5), sharey=True)\n",
        "\n",
        "sns.histplot(treatment_donors[\"amount\"], bins=30, color=\"orange\", edgecolor=\"black\", ax=axes[0])\n",
        "axes[0].axvline(mean_treat, color='red', linestyle='--', label=f\"Mean: ${mean_treat:.2f}\")\n",
        "axes[0].set_title(\"Treatment Group\")\n",
        "axes[0].set_xlabel(\"Donation Amount\")\n",
        "axes[0].set_ylabel(\"Frequency\")\n",
        "axes[0].legend()\n",
        "\n",
        "sns.histplot(control_donors[\"amount\"], bins=30, color=\"orange\", edgecolor=\"black\", ax=axes[1])\n",
        "axes[1].axvline(mean_control, color='red', linestyle='--', label=f\"Mean: ${mean_control:.2f}\")\n",
        "axes[1].set_title(\"Control Group\")\n",
        "axes[1].set_xlabel(\"Donation Amount\")\n",
        "axes[1].legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "id": "29aa1f96",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Two histograms show the distribution of donation amounts for the treatment group and control group, restricted to those who donated. The vertical red line marks the average for each group:\n",
        "\n",
        "Treatment Mean: ~$43.87\n",
        "\n",
        "Control Mean: ~$45.54\n",
        "\n",
        "Both distributions are right-skewed, with most donors giving small amounts and a few contributing large sums. There is no visible shift in the average due to the treatment.\n",
        "\n",
        "#### Conclusion\n",
        "These analyses support the idea that matching offers increase response rate, but do not change how much people give once they’ve decided to donate. This distinction is important for fundraising strategies: matching may motivate more people to give, but it doesn't necessarily increase per-donor revenue.\n",
        "\n",
        "\n",
        "\n",
        "## Simulation Experiment\n",
        "\n",
        "As a reminder of how the t-statistic \"works,\" in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.\n",
        "\n",
        "Suppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made. \n",
        "\n",
        "Further suppose that the true distribution of respondents who do get a charitable donation match of any size  is Bernoulli with probability p=0.022 that a donation is made.\n",
        "\n",
        "\n",
        "### Law of Large Numbers\n",
        "\n",
        "_to do:  Make a plot like those on slide 43 from our first class and explain the plot to the reader. To do this, you will simulate 100,00 draws from the control distribution and 10,000 draws from the treatment distribution. You'll then calculate a vector of 10,000 differences, and then you'll plot the cumulative average of that vector of differences. Comment on whether the cumulative average approaches the true difference in means._\n"
      ],
      "id": "8b5cf31c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Parameters\n",
        "p_control = 0.018\n",
        "p_treatment = 0.022\n",
        "n_sim = 10000\n",
        "np.random.seed(42)\n",
        "# Simulate 10,000 binary outcomes for each group\n",
        "control_sim = np.random.binomial(1, p_control, 100000)\n",
        "treatment_sim = np.random.binomial(1, p_treatment, n_sim)\n",
        "\n",
        "# Vector of differences\n",
        "diffs = treatment_sim - control_sim[:10000]\n",
        "\n",
        "# Cumulative average of the differences\n",
        "cum_avg = np.cumsum(diffs) / np.arange(1, len(diffs) + 1)\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(8, 4))\n",
        "plt.plot(cum_avg, label='Cumulative Average Difference', color='orange')\n",
        "plt.axhline(y=p_treatment - p_control, color='red', linestyle='--', label='True Difference (0.004)')\n",
        "plt.title(\"Law of Large Numbers: Cumulative Average of Simulated Differences\")\n",
        "plt.xlabel(\"Simulation Iteration\")\n",
        "plt.ylabel(\"Cumulative Average Difference\")\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "fa5c9eff",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Interpretation\n",
        "This plot demonstrates the Law of Large Numbers. As we simulate more and more observations, the cumulative average of the differences converges toward the true mean difference (0.004). Initially, there’s randomness and fluctuation, but the line stabilizes as the number of observations increases.\n",
        "\n",
        "This convergence is the foundation for using sample averages to estimate population parameters and underpins why large sample sizes give us more reliable estimates in experiments.\n",
        "\n",
        "\n",
        "### Central Limit Theorem\n",
        "\n",
        "_to do: Make 4 histograms like those on slide 44 from our first class at sample sizes 50, 200, 500, and 1000 and explain these plots to the reader. To do this for a sample size of e.g. 50, take 50 draws from each of the control and treatment distributions, and calculate the average difference between those draws. Then repeat that process 999 more times so that you have 1000 averages. Plot the histogram of those averages. Comment on whether zero is in the \"middle\" of the distribution or whether it's in the \"tail.\"_\n"
      ],
      "id": "57bb0d7b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Parameters\n",
        "p_control = 0.018\n",
        "p_treatment = 0.022\n",
        "true_diff = p_treatment - p_control\n",
        "sample_sizes = [50, 200, 500, 1000]\n",
        "n_reps = 1000\n",
        "\n",
        "np.random.seed(42)\n",
        "histograms = {}\n",
        "\n",
        "# Simulate average differences for each sample size\n",
        "for n in sample_sizes:\n",
        "    diffs = []\n",
        "    for _ in range(n_reps):\n",
        "        control_sample = np.random.binomial(1, p_control, n)\n",
        "        treatment_sample = np.random.binomial(1, p_treatment, n)\n",
        "        diff = treatment_sample.mean() - control_sample.mean()\n",
        "        diffs.append(diff)\n",
        "    histograms[n] = diffs\n",
        "\n",
        "# Plot histograms\n",
        "fig, axes = plt.subplots(2, 2, figsize=(12, 8))\n",
        "axes = axes.flatten()\n",
        "\n",
        "for i, n in enumerate(sample_sizes):\n",
        "    axes[i].hist(histograms[n], bins=30, color='skyblue', edgecolor='black')\n",
        "    axes[i].axvline(0, color='red', linestyle='--', label=\"Zero Reference\")\n",
        "    axes[i].axvline(true_diff, color='green', linestyle='--', label=\"True Difference (0.004)\")\n",
        "    axes[i].set_title(f\"Sample Size = {n}\")\n",
        "    axes[i].set_xlabel(\"Mean Difference\")\n",
        "    axes[i].set_ylabel(\"Frequency\")\n",
        "    axes[i].legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "1aa635fa",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Interpretation\n",
        "These four histograms illustrate how the sampling distribution of the difference in means behaves at increasing sample sizes:\n",
        "\n",
        "At n = 50, the distribution is quite wide and skewed. Zero is within the center-ish but not tightly.\n",
        "\n",
        "As sample size increases, the distribution becomes tighter, more symmetric, and centered.\n",
        "\n",
        "By n = 1000, the distribution of average differences closely resembles a normal distribution centered near the true mean difference (0.004).\n",
        "\n",
        "This is a direct illustration of the Central Limit Theorem:\n",
        "\n",
        "As sample size increases, the distribution of the sample mean difference becomes approximately normal, regardless of the original distribution shape.\n",
        "\n",
        "Also note: zero shifts from being more \"middle-ish\" in smaller samples to being closer to the tail as the signal (the true effect) dominates the noise.\n"
      ],
      "id": "63dfbdac"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/jnishyu/anaconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}